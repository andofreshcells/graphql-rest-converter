// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scalars should allow custom scalars 1`] = `
{
  "components": {
    "schemas": {
      "Date": {
        "description": "A Date",
        "format": "date",
        "nullable": true,
        "type": "string",
      },
      "Datetime": {
        "description": "A Datetime",
        "format": "date-time",
        "nullable": true,
        "type": "string",
      },
      "JSON": {
        "description": "A JSON Scalar",
        "nullable": true,
        "type": "object",
      },
    },
  },
  "info": {
    "description": "My API",
    "title": "Sample API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/data": {
      "get": {
        "operationId": "getData",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "getData": {
                      "items": {
                        "description": "A Complex type",
                        "properties": {
                          "created": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Date",
                              },
                            ],
                            "description": "Created when",
                            "nullable": false,
                            "type": "string",
                          },
                          "data": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/JSON",
                              },
                            ],
                            "description": "The JSON data",
                            "nullable": false,
                            "type": "object",
                          },
                          "id": {
                            "description": "Our ID",
                            "format": "int32",
                            "type": "integer",
                          },
                          "modified": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Datetime",
                              },
                            ],
                            "description": "Modified when",
                            "nullable": false,
                            "type": "string",
                          },
                        },
                        "required": [
                          "id",
                          "created",
                          "data",
                          "modified",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "getData",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "errorCode": {
                            "type": "string",
                          },
                          "location": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Invalid request",
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Branch of data that does not contain errors",
                      "nullable": true,
                      "properties": {
                        "getData": {
                          "items": {
                            "description": "A Complex type",
                            "properties": {
                              "created": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Date",
                                  },
                                ],
                                "description": "Created when",
                                "nullable": false,
                                "type": "string",
                              },
                              "data": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/JSON",
                                  },
                                ],
                                "description": "The JSON data",
                                "nullable": false,
                                "type": "object",
                              },
                              "id": {
                                "description": "Our ID",
                                "format": "int32",
                                "type": "integer",
                              },
                              "modified": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Datetime",
                                  },
                                ],
                                "description": "Modified when",
                                "nullable": false,
                                "type": "string",
                              },
                            },
                            "required": [
                              "id",
                              "created",
                              "data",
                              "modified",
                            ],
                            "type": "object",
                          },
                          "type": "array",
                        },
                      },
                      "required": [
                        "getData",
                      ],
                      "type": "object",
                    },
                    "errors": {
                      "items": {
                        "properties": {
                          "locations": {
                            "items": {
                              "properties": {
                                "column": {
                                  "type": "integer",
                                },
                                "line": {
                                  "type": "integer",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error",
          },
        },
        "x-graphql-operation": "query getData {
  getData {
    id
    created
    data
    modified
  }
}",
      },
      "post": {
        "operationId": "storeData",
        "parameters": [
          {
            "in": "query",
            "name": "input",
            "required": true,
            "schema": {
              "description": "Input type to create new data",
              "properties": {
                "anotherChild": {
                  "properties": {
                    "created": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Date",
                        },
                      ],
                      "description": "Created when",
                      "nullable": false,
                      "type": "string",
                    },
                    "modified": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Datetime",
                        },
                      ],
                      "description": "Modified when",
                      "nullable": false,
                      "type": "string",
                    },
                  },
                  "required": [
                    "created",
                    "modified",
                  ],
                  "type": "object",
                },
                "child": {
                  "properties": {
                    "created": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Date",
                        },
                      ],
                      "description": "Created when",
                      "nullable": false,
                      "type": "string",
                    },
                    "modified": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Datetime",
                        },
                      ],
                      "description": "Modified when",
                      "nullable": false,
                      "type": "string",
                    },
                  },
                  "required": [
                    "created",
                    "modified",
                  ],
                  "type": "object",
                },
                "id": {
                  "format": "int32",
                  "type": "integer",
                },
              },
              "required": [
                "id",
                "anotherChild",
                "child",
              ],
              "type": "object",
            },
            "x-graphql-variable-name": "input",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "storeData": {
                      "items": {
                        "description": "A Complex type",
                        "properties": {
                          "created": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Date",
                              },
                            ],
                            "description": "Created when",
                            "nullable": false,
                            "type": "string",
                          },
                          "id": {
                            "description": "Our ID",
                            "format": "int32",
                            "type": "integer",
                          },
                          "modified": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Datetime",
                              },
                            ],
                            "description": "Modified when",
                            "nullable": false,
                            "type": "string",
                          },
                        },
                        "required": [
                          "id",
                          "created",
                          "modified",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "required": [
                    "storeData",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "errorCode": {
                            "type": "string",
                          },
                          "location": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Invalid request",
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Branch of data that does not contain errors",
                      "nullable": true,
                      "properties": {
                        "storeData": {
                          "items": {
                            "description": "A Complex type",
                            "properties": {
                              "created": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Date",
                                  },
                                ],
                                "description": "Created when",
                                "nullable": false,
                                "type": "string",
                              },
                              "id": {
                                "description": "Our ID",
                                "format": "int32",
                                "type": "integer",
                              },
                              "modified": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/Datetime",
                                  },
                                ],
                                "description": "Modified when",
                                "nullable": false,
                                "type": "string",
                              },
                            },
                            "required": [
                              "id",
                              "created",
                              "modified",
                            ],
                            "type": "object",
                          },
                          "type": "array",
                        },
                      },
                      "required": [
                        "storeData",
                      ],
                      "type": "object",
                    },
                    "errors": {
                      "items": {
                        "properties": {
                          "locations": {
                            "items": {
                              "properties": {
                                "column": {
                                  "type": "integer",
                                },
                                "line": {
                                  "type": "integer",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error",
          },
        },
        "x-graphql-operation": "mutation storeData($input: DataInput!) {
  storeData(data: $input) {
    id
    created
    modified
  }
}",
      },
    },
  },
}
`;
