// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Requests should DELETE \`/different-sample with empty body\` 1`] = `
{
  "mutationWithoutDefaultArg": Any<Boolean>,
}
`;

exports[`Requests should DELETE \`/different-sample\` 1`] = `
{
  "mutationWithoutDefaultArg": Any<Boolean>,
}
`;

exports[`Requests should DELETE \`/different-sample-in-header\` 1`] = `
{
  "mutationWithoutDefaultArg": Any<Boolean>,
}
`;

exports[`Requests should DELETE \`/sample\` 1`] = `
{
  "deleteSample": Any<Boolean>,
}
`;

exports[`Requests should GET \`/sample/id\` 1`] = `
{
  "getSample": {
    "myId": Any<Number>,
    "myName": "Hello World",
  },
}
`;

exports[`Requests should GET \`/samples\` 1`] = `
{
  "samples": [
    {
      "myId": Any<Number>,
      "myName": "Hello World",
    },
    {
      "myId": Any<Number>,
      "myName": "Hello World",
    },
  ],
}
`;

exports[`Requests should POST \`/call-without-args 1`] = `
{
  "mutationWithoutArgs": Any<Boolean>,
}
`;

exports[`Requests should POST \`/different-sample/id\` 1`] = `
{
  "createDifferentSample": {
    "name": "Hello World",
  },
}
`;

exports[`Requests should POST \`/sample\` 1`] = `
{
  "createSample": {
    "id": Any<Number>,
    "name": "Hello World",
    "price": Any<Number>,
    "sku": Any<String>,
    "type": Any<String>,
  },
}
`;

exports[`Requests should PUT \`/sample\` 1`] = `
{
  "updateSample": {
    "name": "Hello World",
  },
}
`;

exports[`Requests should fail GET \`/sample/id\`, if id is not a number 1`] = `
{
  "errors": [
    {
      "errorCode": "type.openapi.requestValidation",
      "location": "path",
      "message": "must be integer",
      "path": "id",
    },
  ],
}
`;

exports[`Requests should fail POST \`/sample\` if invalid body 1`] = `
{
  "errors": [
    {
      "errorCode": "required.openapi.requestValidation",
      "location": "body",
      "message": "must have required property 'name'",
      "path": "name",
    },
  ],
}
`;

exports[`Requests should fail on DELETE \`/sample\` 1`] = `
{
  "errors": [
    {
      "errorCode": "type.openapi.requestValidation",
      "location": "query",
      "message": "must be integer",
      "path": "id",
    },
  ],
}
`;

exports[`Requests should fail on POST \`/different-sample/id\` with wrong request body 1`] = `
{
  "errors": [
    {
      "errorCode": "required.openapi.requestValidation",
      "location": "body",
      "message": "must have required property 'sample'",
      "path": "sample",
    },
    {
      "errorCode": "required.openapi.requestValidation",
      "location": "body",
      "message": "must have required property 'otherThing'",
      "path": "otherThing",
    },
  ],
}
`;

exports[`Requests should fail to DELETE (without header) \`/different-sample-in-header\` 1`] = `
{
  "errors": [
    {
      "errorCode": "required.openapi.requestValidation",
      "location": "headers",
      "message": "must have required property 'id'",
      "path": "id",
    },
  ],
}
`;

exports[`Requests should handle default values 1`] = `
{
  "getSample": {
    "name": "Hello World",
  },
}
`;
