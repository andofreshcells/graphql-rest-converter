// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormData should POST \`/fetch\` successful 1`] = `
{
  "someMutation": "Hello World",
}
`;

exports[`FormData should create the correct schema 1`] = `
{
  "components": {
    "schemas": {},
  },
  "info": {
    "description": "Description",
    "title": "The API",
    "version": "1.0.0",
  },
  "openapi": "3.0.3",
  "paths": {
    "/fetch": {
      "post": {
        "operationId": "fetch",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer",
            },
            "x-graphql-variable-name": "id",
          },
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "someParameter": {
                    "type": "string",
                    "x-graphql-variable-name": "someParameter",
                  },
                },
                "required": [
                  "someParameter",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "someMutation": {
                      "type": "string",
                    },
                  },
                  "required": [
                    "someMutation",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Success",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "errorCode": {
                            "type": "string",
                          },
                          "location": {
                            "type": "string",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Invalid request",
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Unsupported Media Type",
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Branch of data that does not contain errors",
                      "nullable": true,
                      "properties": {
                        "someMutation": {
                          "type": "string",
                        },
                      },
                      "required": [
                        "someMutation",
                      ],
                      "type": "object",
                    },
                    "errors": {
                      "items": {
                        "properties": {
                          "locations": {
                            "items": {
                              "properties": {
                                "column": {
                                  "type": "integer",
                                },
                                "line": {
                                  "type": "integer",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "message": {
                            "type": "string",
                          },
                          "path": {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Internal Server Error",
          },
        },
        "x-graphql-operation": "mutation fetch($id: Int!, $someParameter: String!) {
  someMutation(id: $id, someParameter: $someParameter)
}",
      },
    },
  },
}
`;

exports[`FormData should only support form-data requests 1`] = `
{
  "errors": [
    {
      "message": "Only "application/x-www-form-urlencoded" supported",
    },
  ],
}
`;

exports[`FormData should validate form data requests 1`] = `
{
  "errors": [
    {
      "errorCode": "required.openapi.requestValidation",
      "location": "body",
      "message": "must have required property 'someParameter'",
      "path": "someParameter",
    },
  ],
}
`;
